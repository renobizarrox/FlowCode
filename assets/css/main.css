/* Blueprint Editor - Unreal Engine 5 Inspired Styles */

/* Ensure Vuetify icons display properly */
.v-icon {
  font-family: 'Material Design Icons' !important;
}

:root {
  /* UE5 Blueprint Colors */
  --bg-primary: #1a1a1a;
  --bg-secondary: #2d2d2d;
  --bg-tertiary: #404040;
  --accent-blue: #0078d4;
  --accent-green: #10ff10;
  --accent-red: #ff4444;
  --accent-orange: #ff8800;
  --accent-purple: #aa44ff;
  --accent-yellow: #ffff44;
  --text-primary: #ffffff;
  --text-secondary: #cccccc;
  --text-muted: #888888;
  --border-color: #555555;
  --grid-color: #333333;
  
  /* Node specific colors */
  --node-exec: #ffffff;
  --node-bool: #b91c1c;
  --node-int: #059669;
  --node-float: #0891b2;
  --node-string: #7c3aed;
  --node-object: #0078d4;
  --node-function: #f59e0b;
  --node-event: #dc2626;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Inter', sans-serif;
  background: var(--bg-primary);
  color: var(--text-primary);
  overflow: hidden;
}

.blueprint-editor {
  width: 100vw;
  height: 100vh;
  background: var(--bg-primary);
  position: relative;
}

.editor-layout {
  display: flex;
  width: 100%;
  height: 100%;
  position: relative;
}

.blueprint-side {
  position: relative;
  height: 100%;
  transition: width 0.3s ease;
}

.code-editor-side {
  width: 40%;
  height: 100%;
  position: relative;
}

.blueprint-canvas {
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 50% 50%, var(--grid-color) 1px, transparent 1px),
    radial-gradient(circle at 25% 25%, var(--grid-color) 1px, transparent 1px);
  background-size: 20px 20px, 20px 20px;
  background-position: 0 0, 10px 10px;
  position: relative;
  overflow: hidden;
  cursor: grab;
}

.blueprint-canvas:active {
  cursor: grabbing;
}

.blueprint-node {
  position: absolute;
  background: var(--bg-secondary);
  border: 2px solid var(--border-color);
  border-radius: 8px;
  min-width: 200px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
  user-select: none;
  transition: box-shadow 0.2s ease, border-color 0.2s ease;
  z-index: 10;
}

.blueprint-node:hover {
  border-color: var(--accent-blue);
  box-shadow: 0 6px 20px rgba(0, 120, 212, 0.3);
}

.blueprint-node.selected {
  border-color: var(--accent-blue);
  box-shadow: 0 0 0 3px rgba(0, 120, 212, 0.3);
}

.node-header {
  background: var(--bg-tertiary);
  padding: 8px 12px;
  border-radius: 6px 6px 0 0;
  font-weight: 600;
  font-size: 14px;
  display: flex;
  align-items: center;
  gap: 8px;
}

.node-icon {
  width: 16px;
  height: 16px;
  border-radius: 2px;
}

.node-body {
  padding: 12px;
}

.node-pin {
  display: flex;
  align-items: center;
  margin: 4px 0;
  position: relative;
  height: 24px;
  padding: 0 12px;
}

.pin-connector {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  border: 2px solid #666;
  background: var(--bg-primary);
  position: relative;
  cursor: pointer;
  transition: all 0.2s ease;
  z-index: 10;
}

.pin-connector:hover {
  transform: scale(1.2);
}

.pin-connector.exec {
  background: var(--node-exec);
}

.pin-connector.bool {
  background: var(--node-bool);
}

.pin-connector.int {
  background: var(--node-int);
}

.pin-connector.float {
  background: var(--node-float);
}

.pin-connector.string {
  background: var(--node-string);
}

.pin-connector.object {
  background: var(--node-object);
}

.pin-input {
  position: absolute;
  left: -6px;
  top: 50%;
  transform: translateY(-50%);
}

.pin-output {
  position: absolute;
  right: -6px;
  top: 50%;
  transform: translateY(-50%);
}

.pin-label {
  font-size: 12px;
  color: var(--text-secondary);
  margin: 0 8px;
}

.connection-line {
  position: absolute;
  pointer-events: none;
  z-index: 1;
}

.toolbar {
  position: absolute;
  top: 20px;
  left: 20px;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 12px;
  display: flex;
  gap: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  z-index: 1000;
  pointer-events: auto;
}

.toolbar-btn {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  color: var(--text-primary);
  padding: 8px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
  transition: all 0.2s ease;
}

.toolbar-btn:hover {
  background: var(--accent-blue);
  border-color: var(--accent-blue);
}

.toolbar-btn.active {
  background: var(--accent-blue);
  border-color: var(--accent-blue);
}

.toolbar-status {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 11px;
  color: var(--text-secondary);
  padding: 4px 8px;
  border-radius: 4px;
  background: rgba(16, 255, 16, 0.1);
  border: 1px solid rgba(16, 255, 16, 0.3);
}

.node-palette {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 300px;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  max-height: calc(100vh - 40px);
  overflow-y: auto;
  z-index: 1000;
  pointer-events: auto;
}

.palette-header {
  padding: 12px;
  background: var(--bg-tertiary);
  border-radius: 8px 8px 0 0;
  font-weight: 600;
  border-bottom: 1px solid var(--border-color);
}

.palette-section {
  padding: 8px;
}

.palette-category {
  margin-bottom: 12px;
}

.category-header {
  font-size: 14px;
  font-weight: 600;
  color: var(--accent-blue);
  margin-bottom: 8px;
  padding: 4px 0;
  border-bottom: 1px solid var(--border-color);
}

.palette-item {
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 8px;
  margin: 4px 0;
  cursor: grab;
  font-size: 12px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 8px;
}

.palette-item:hover {
  background: var(--accent-blue);
  border-color: var(--accent-blue);
}

.palette-item:active {
  cursor: grabbing;
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--bg-primary);
}

::-webkit-scrollbar-thumb {
  background: var(--border-color);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--accent-blue);
}

/* Animation for node creation */
@keyframes nodeCreate {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.node-create {
  animation: nodeCreate 0.3s ease;
}

/* Connection line styling */
.connection-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 5;
}

.connection-svg .connection-path {
  pointer-events: stroke;
  stroke-width: 4px;
  cursor: pointer;
}

.connection-svg .connection-path:hover {
  stroke-width: 5px;
  opacity: 0.8 !important;
  filter: drop-shadow(0 0 4px currentColor);
}

.connection-path.connection-highlighted {
  stroke-width: 6px !important;
  opacity: 1 !important;
  filter: drop-shadow(0 0 8px var(--accent-yellow)) !important;
  animation: pulse-highlight 0.5s ease-in-out 3;
}

@keyframes pulse-highlight {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
}

.connection-path {
  fill: none;
  stroke-width: 3;
  stroke: var(--accent-blue);
  opacity: 0.6;
}

.connection-flow {
  opacity: 1;
  mix-blend-mode: screen;
  filter: blur(1px) brightness(1.5);
}

.connection-path.exec {
  stroke: var(--node-exec);
  opacity: 0.4;
}

.connection-path.bool {
  stroke: var(--node-bool);
  opacity: 0.5;
}

.connection-path.int {
  stroke: var(--node-int);
  opacity: 0.5;
}

.connection-path.float {
  stroke: var(--node-float);
  opacity: 0.5;
}

.connection-path.string {
  stroke: var(--node-string);
  opacity: 0.5;
}

.connection-path.object {
  stroke: var(--node-object);
  opacity: 0.5;
}

/* Enhanced flow animations for different types */
.connection-flow.exec {
  filter: blur(0.5px) brightness(2) drop-shadow(0 0 3px rgba(255, 255, 255, 0.8));
}

.connection-flow.bool {
  filter: blur(1px) brightness(1.5) drop-shadow(0 0 3px rgba(220, 38, 38, 0.6));
}

.connection-flow.int {
  filter: blur(1px) brightness(1.5) drop-shadow(0 0 3px rgba(5, 150, 105, 0.6));
}

.connection-flow.float {
  filter: blur(1px) brightness(1.5) drop-shadow(0 0 3px rgba(8, 145, 178, 0.6));
}

.connection-flow.string {
  filter: blur(1px) brightness(1.5) drop-shadow(0 0 3px rgba(124, 58, 237, 0.6));
}

.connection-flow.object {
  filter: blur(1px) brightness(1.5) drop-shadow(0 0 3px rgba(0, 120, 212, 0.6));
}

.connection-path.temp {
  stroke: var(--accent-blue);
  stroke-width: 2px;
  opacity: 0.8;
  stroke-dasharray: 5,5;
  animation: dash 1s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: -10;
  }
} 